# This file is maintained by Puppet.
# DO NOT EDIT
Director {                            # define myself
  Name = <%= @dirserver %>
  DIRport = <%= @dirport %>                # where we listen for UA connections
  QueryFile = '/etc/bacula/query.sql'
  WorkingDirectory = '<%= @working_directory %>'
  PidDirectory = '<%= @pid_directory %>'
  Maximum Concurrent Jobs = <%= @maximum_concurrent_jobs %>
  Password = '<%= @passwordclient %>'         # Console password
  Messages = Daemon
  #DirAddress = <%= @networking['ip'] %>            # N.B. Use a fully qualified name here 
}

# List of files to be backed up
FileSet {
  Name = "Full Set"
  Include {
    Options {
      signature = MD5
      compression = GZIP
    }
    File = /etc
    File = /var/www
  }

  Exclude {
    File = /var/spool/bacula
    File = /var/lib/bacula
    File = /bacula
    File = /tmp
    File = /dev
    File = /proc
    File = /tmp
    File = /sys
    File = /.journal
    File = /.fsck
  }
}

#
Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sun at 23:05
  Run = Differential 2nd-5th sun at 23:05
  Run = Incremental mon-sat at 23:05
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 23:10
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = <%= @signature %>
    }
    File = "/var/spool/bacula/bacula.sql"
  }
}

#

# Definition of file Virtual Autochanger device
Storage {
  Name = File1
  Address = <%= @networking['ip'] %>            # N.B. Use a fully qualified name here
  SDPort = 9103
  Password = '<%= @passwordclient %>'
  Device = FileStorage
  Media Type = File1
  Maximum Concurrent Jobs = 10        # run up to 10 jobs a the same time
}

# Generic catalog service
Catalog {
  Name = MyCatalog
  dbname = "bacula"; dbuser = "bacula"; dbpassword = "<%= @passwordclient %>"
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = rafael@tomelin.eti.br = all, !skipped
  mail = rafael.tomelin@gmail.com = all, !skipped
  operator = rafael@tomelin.eti.br = mount
  console = all, !skipped, !saved
  append = '/var/log/bacula/bacula.log' = all, !skipped
  catalog = all
}


#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root@localhost = all, !skipped
  mail = rafael@tomelin.eti.br = all, !skipped
  console = all, !skipped, !saved
  append = '/var/log/bacula/bacula.log' = all, !skipped
}

# Default pool definition
Pool {
  Name = Default
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 10G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
}

# File Pool definition
Pool {
  Name = File
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 10G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  Label Format = "Local-"               # Auto label
}


# Scratch pool definition
Pool {
  Name = Scratch
  Pool Type = Backup
}

#
# Restricted console used by tray-monitor to get the status of the director
Console {
  Name = bacula-mon
  Password = '@@MON_DIR_PASSWORD@@'
  CommandACL = status, .status
}

#INCLUDE CLIENTS
@|"sh -c 'for f in /etc/bacula/clients/*.conf ; do echo @${f} ; done'"

#INCLUDE JOBS
@|"sh -c 'for f in /etc/bacula/jobs/*.conf ; do echo @${f} ; done'"
